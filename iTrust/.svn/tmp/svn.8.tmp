package edu.ncsu.csc.itrust.Team805.UC39;

import com.meterware.httpunit.HttpUnitOptions;
import com.meterware.httpunit.WebConversation;
import com.meterware.httpunit.WebForm;
import com.meterware.httpunit.WebResponse;
import com.meterware.httpunit.WebTable;

import edu.ncsu.csc.itrust.http.iTrustHTTPTest;
import edu.ncsu.csc.itrust.DBBuilder;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.enums.TransactionType;
import edu.ncsu.csc.itrust.http.iTrustHTTPTest;
import edu.ncsu.csc.itrust.testutils.TestDAOFactory;

@SuppressWarnings("unused")
public class TransactionlogTest extends iTrustHTTPTest{
	
	@Override
	protected void setUp() throws Exception{
		super.setUp();
		HttpUnitOptions.setExceptionsThrownOnScriptError(false);	
		HttpUnitOptions.setScriptingEnabled(false);
		gen.clearAllTables();
		gen.standardData();
	}

	public void testTesterTestRole() throws Exception{
		WebConversation wc = login("9999999999", "pw");//log in as tester
		WebResponse wr = wc.getCurrentPage();
		assertEquals("iTrust - Tester Home", wr.getTitle());
		
		wr = wr.getLinkWith("Transaction Log").click();
		assertEquals("iTrust - Transaction Log", wr.getTitle());
//		assertEquals(ADDRESS + "auth/tester/transactionLog.jsp", wr.getURL().toString());
		
		//fill in the form and submit
//		WebForm transLog = wr.getForms()[0];
//		transLog.setParameter("role1", "ER");
//		transLog.setParameter("role2", "ALL");
//		transLog.setParameter("date", "ALL");
//		transLog.setParameter("transaction", "ALL");
//		transLog.setParameter("formAction", "VIEW");
//		transLog.getSubmitButtons()[0].click();
//		transLog.submit();
		
		wr = wc.getCurrentPage();//update the page
		
//		System.out.println(wr.getText());
//		WebTable[] table = wr.getTables();
//		for(int i = 0; i < table.length; i++){
//			System.out.println(table[i].getRowCount());
//		}
		
//		 still cant get the proper text after submitting.
//		 If everything works like MessageFiltering, this should work
				
/*		WebTable table = wr.getTables()[0];
		assertTrue(table.getRows()[1].getText().contains("ER"));
		assertTrue(table.getRows()[1].getText().contains("PATIENT"));
		assertTrue(table.getRows()[1].getText().contains("EMERGENCY_REPORT_VIEW"));
		assertTrue(table.getRows()[1].getText().contains("2008-11-14 10:04:00.0"));
		
		assertTrue(table.getRows()[2].getText().contains("ER"));
		assertTrue(table.getRows()[2].getText().contains("PATIENT"));
		assertTrue(table.getRows()[2].getText().contains("EMERGENCY_REPORT_VIEW"));
		assertTrue(table.getRows()[2].getText().contains("2008-11-14 09:32:00.0"));
		*/
/*		//Check the column entries
		assertTrue(wr.getText().contains("Type"));
		assertTrue(wr.getText().contains("Code"));
		assertTrue(wr.getText().contains("Description"));

		//Check the first few rows
		assertTrue(wr.getText().contains("HOME_VIEW"));
		assertTrue(wr.getText().contains("10"));
		assertTrue(wr.getText().contains("User views homepage"));

		assertTrue(wr.getText().contains("UNCAUGHT_EXCEPTION"));
		assertTrue(wr.getText().contains("20"));
		assertTrue(wr.getText().contains("Exception occured and was not caught"));*/
}
	
	public void testAdminTestRole() throws Exception{
		//log in as Admin
			WebConversation wc = login("9000000001", "pw");
			WebResponse wr = wc.getCurrentPage();
			assertEquals("iTrust - Admin Home", wr.getTitle());
			
			wr = wr.getLinkWith("Transaction Log").click();
			assertEquals("iTrust - Transaction Log", wr.getTitle());
//			assertEquals(ADDRESS + "auth/tester/transactionLog.jsp", wr.getURL().toString());
			
			//fill in the form and submit
//			WebForm transLog = wr.getForms()[0];
//			transLog.setParameter("role1", "HCP");
//			transLog.setParameter("role2", "ALL");
//			transLog.setParameter("date", "ALL");
//			transLog.setParameter("transaction", "ALL");
//			transLog.setParameter("formAction", "VIEW");
//			transLog.getSubmitButtons()[0].click();
//			transLog.submit();
			
			wr = wc.getCurrentPage();//update the page
			
//			System.out.println(wr.getText());
//			WebTable[] table = wr.getTables();
//			for(int i = 0; i < table.length; i++){
//				System.out.println(table[i].getRowCount());
//			}
//			 still cant get the proper text after submitting.
//			 If everything works like MessageFiltering, this should work
					
/*			WebTable table = wr.getTables()[0];
			assertTrue(table.getRows()[1].getText().contains("HCP"));
			assertTrue(table.getRows()[1].getText().contains("PATIENT"));
			assertTrue(table.getRows()[1].getText().contains("PATIENT_LIST_ADD"));
			assertTrue(table.getRows()[1].getText().contains("2011-06-24 06:54:59.0"));
		
			assertTrue(table.getRows()[4].getText().contains("HCP"));
			assertTrue(table.getRows()[4].getText().contains("PATIENT"));
			assertTrue(table.getRows()[4].getText().contains("OFFICE_VISIT_EDIT"));
			assertTrue(table.getRows()[4].getText().contains("2008-12-01 11:30:00.0"));
			
			assertTrue(table.getRows()[7].getText().contains("HCP"));
			assertTrue(table.getRows()[7].getText().contains("PATIENT"));
			assertTrue(table.getRows()[7].getText().contains("PRESCRIPTION_REPORT_VIEW"));
			assertTrue(table.getRows()[7].getText().contains("2008-07-15 13:13:00.0"));
			
			assertTrue(table.getRows()[9].getText().contains("HCP"));
			assertTrue(table.getRows()[9].getText().contains("PATIENT"));
			assertTrue(table.getRows()[9].getText().contains("RISK_FACTOR_VIEW"));
			assertTrue(table.getRows()[9].getText().contains("2008-06-15 13:15:00.0"));*/
			
	/*		//Check the column entries
			assertTrue(wr.getText().contains("Type"));
			assertTrue(wr.getText().contains("Code"));
			assertTrue(wr.getText().contains("Description"));

			//Check the first few rows
			assertTrue(wr.getText().contains("HOME_VIEW"));
			assertTrue(wr.getText().contains("10"));
			assertTrue(wr.getText().contains("User views homepage"));

			assertTrue(wr.getText().contains("UNCAUGHT_EXCEPTION"));
			assertTrue(wr.getText().contains("20"));
			assertTrue(wr.getText().contains("Exception occured and was not caught"));*/
	}	
}